@model AdventureLog.Models.Item

@{
    ViewBag.Title = "Edit Item";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Item_PK)
    @Html.HiddenFor(model => model.Adventure_PK)
    @Html.HiddenFor(model => model.ParentItem_PK)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ShortDescription, 10, 80, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            <script>CKEDITOR.replace('Description', { customConfig: '/Scripts/ckeditor_config.js' })</script>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GamemasterNotes, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.GamemasterNotes, new { htmlAttributes = new { @class = "form-control" } })
            <script>CKEDITOR.replace('GamemasterNotes', { customConfig: '/Scripts/ckeditor_config.js' })</script>
            @Html.ValidationMessageFor(model => model.GamemasterNotes, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.MapFileName, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.LastModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.LastModifiedUser, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.IsActive)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}
<hr />
<div class="d-flex">
    <button class="btn btn-danger"
            data-toggle="collapse"
            href="#deleteCollapse"
            aria-expanded="true"
            aria-controls="deleteCollapse"
            role="button">
        Delete Adventure
    </button>
    <div class="collapse ml-4" id="deleteCollapse">
        @using (Html.BeginForm("DeleteItem", "AdventureHome"))
        {

            @Html.HiddenFor(model => model.Item_PK)
            @Html.HiddenFor(model => model.Adventure_PK)
            <input type="submit" value="Confirm Delete" class="btn btn-outline-danger" />
        }
    </div>
</div>
<hr />

<div>
    @Html.ActionLink("Back to Item", "ItemDetails", new { id = Model.Item_PK }, new { @class = "btn btn-secondary" })
</div>