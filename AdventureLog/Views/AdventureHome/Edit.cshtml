@model AdventureLog.Models.Adventure
@{
    ViewBag.Title = "Edit Adventure";
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Adventure_PK)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SystemName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SystemName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SystemName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label pl-3" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            <script>CKEDITOR.replace('Description')</script>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label pl-3" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <h4>Manage Players</h4>

    <div class="form-group">
        @Html.LabelFor(model => model.InvitePassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.InvitePassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InvitePassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label pl-3">
            Password Link:
            <a href="@String.Format("{0}Invite/{1}", Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.Length - 4), Model.InvitePassword)">
                @String.Format("{0}Invite/{1}", Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.Length - 4), Model.InvitePassword)
            </a>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Players, htmlAttributes: new { @class = "control-label col-md-2" })
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">User Id</th>
                    <th scope="col">Role</th>
                    <th scope="col">Can Comment/View?</th>
                </tr>
            </thead>
            <tbody>
                @{
                    List<AdventureLog.Models.Player> activePlayers = Model.Players.ToList();

                    foreach (var player in activePlayers)
                    {
                        @:<tr>
                            @:<td>@player.ApplicationUser.UserName</td>
                            @:<td>@player.PlayerRole.RoleName</td>
                            @:<td>
                                <input type="checkbox"
                                       name="activePlayers"
                                       value="@player.Player_PK"
                                       @(Html.Raw(player.IsActive ? "checked=\"checked\"" : "")) />
                            @:</td>
                        @:</tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <hr />

    @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.LastModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.LastModifiedUser, new { htmlAttributes = new { @class = "form-control" } })

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}
<hr />

<div>
    @Html.RouteLink("Back to Details", "Details", Model.Adventure_PK, new { @class = "btn btn-secondary" })
</div>
