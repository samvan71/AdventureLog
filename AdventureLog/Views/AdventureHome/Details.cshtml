@model AdventureLog.Models.Adventure
@using AdventureLog.Controllers;
@using AdventureLog.Models;
@{
    ViewBag.Title = "Adventure Details";
    ViewBag.SearchToolTip = "Use '#' to search for tags";
    ViewBag.SearchPlaceholder = "Search for Items...";

    var ViewPermissionList = new List<PlayerRole.PlayerRoleKey>() { PlayerRole.PlayerRoleKey.Gamemaster, PlayerRole.PlayerRoleKey.Player };
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="font-weight-bold">@Model.Name</h2>
    </div>
    <div class="col-lg-6">
        <h4 class="text-secondary">Last edited by: @Model.LastModifiedUser on @Model.LastModifiedDate.ToShortDateString()</h4>
    </div>
    <div class="col-lg-6">
        @using (Html.BeginForm("AdventureSearch", "AdventureHome"))
        {
            <div class="input-group" id="adv-search">
                <input type="text" 
                       id="search"
                       name="searchText"
                       class="form-control col-md-8" 
                       placeholder=@ViewBag.SearchPlaceholder
                       data-toggle="tooltip"
                       data-html="true"
                       data-placement="top"
                       title="@ViewBag.SearchToolTip"/>
                @Html.HiddenFor(model => model.Adventure_PK)
                <div class="input-group-append">
                    <button type="submit" 
                            class="btn btn-primary">
                    <span class="fa fa-search" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
            <script>
                $(function () {
                    $('#search').autoComplete
                        (
                        {
                            minChars: 1,
                            source: function (term, suggest) {
                                term = term.toLowerCase();
                                var choices = [];
                                @foreach (var item in Model.Items.Where(i => i.IsActive))
                                {
                                    @: choices.push("@item.Name");
                                }
                                var suggestions = [];
                                for (i = 0; i < choices.length; i++)
                                    if (~choices[i].toLowerCase().indexOf(term))
                                        suggestions.push(choices[i]);

                                suggest(suggestions);
                            }
                        }
                        )
                });
            </script>
        }
    </div>
</div>
<hr />
<nav>
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        <a class="nav-item nav-link active"
           id="nav-Summary-tab"
           data-toggle="tab"
           href="#nav-summary"
           role="tab"
           aria-controls="nav-home"
           aria-selected="true">Details</a>
        <a class="nav-item nav-link"
           id="nav-Items-tab"
           data-toggle="tab"
           href="#nav-Items"
           role="tab"
           aria-controls="nav-home"
           aria-selected="true">Items</a>

        @if (AdventureHomeController.IsInAnyRole(User.Identity, Model.Adventure_PK, ViewPermissionList))
        {
            <a class="nav-item nav-link"
               id="nav-comments-tab"
               data-toggle="tab"
               href="#nav-comments"
               role="tab"
               aria-controls="nav-home"
               aria-selected="true">Comments</a>
        }
    </div>
</nav>
<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fade show active p-3" id="nav-summary" role="tabpanel" aria-labelledby="nav-home-tab">
        <!--Summary-->
        <dl class="dl-horizontal">
            <dt>
                @Html.LabelFor(model => model.SystemName):
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SystemName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description):
            </dt>

            <dd>
                @Html.Raw(Model.Description)
            </dd>

            @if (AdventureHomeController.IsInRole(User.Identity, Model.Adventure_PK, PlayerRole.PlayerRoleKey.Gamemaster))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.GamemasterNotes):
                </dt>

                <dd>
                    @Html.Raw(Model.GamemasterNotes)
                </dd>
            }
        </dl>
        @if (AdventureHomeController.IsInRole(User.Identity, Model.Adventure_PK, PlayerRole.PlayerRoleKey.Gamemaster))
        {

            @Html.ActionLink("Edit", "Edit", new { id = Model.Adventure_PK }, new { @class = "btn btn-primary" })
        }
    </div>
    <div class="tab-pane fade p-3" id="nav-Items" role="tabpanel" aria-labelledby="nav-profile-tab">
        <!--Item List-->
        <div class="row p-3">
            <div class="nav flex-column nav-pills col-2" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                @if (AdventureHomeController.IsInRole(User.Identity, Model.Adventure_PK, PlayerRole.PlayerRoleKey.Gamemaster))
                {
                    @Html.ActionLink("Create New Item", "ItemCreate", new { adventureId = Model.Adventure_PK }, new { @class = "btn btn-primary mb-1" })
                }
                @{
                    bool first = true;
                    foreach (var Item in Model.Items.Where(w => w.ParentItem == null && w.IsActive).AsEnumerable())
                    {
                        <a class="btn btn-outline-secondary mb-1
                                   @(first ? "active" : "")"
                           id="v-pills-tab-@Item.Item_PK"
                           data-toggle="pill"
                           href="#v-pills-item-@Item.Item_PK"
                           role="tab"
                           aria-controls="v-pills-item"
                           aria-selected="true">@Item.Name</a>
                        first = false;
                    }
                }
            </div>

            <div class="tab-content col-10" id="v-pills-tabContent">
                @{
                    first = true;
                    foreach (var Item in Model.Items.Where(w => w.ParentItem == null && w.IsActive).AsEnumerable())
                    {
                        <div class="tab-pane fade show @(first ? "active" : "")"
                             id="v-pills-item-@Item.Item_PK"
                             role="tabpanel"
                             aria-labelledby="v-pills-tab-@Item.Item_PK">
                            <div class="card border-dark">
                                <div class="card-header">
                                    <h2 class="float-left text-dark">@Item.Name</h2>
                                    @Html.ActionLink("See More", "ItemDetails", new { id = Item.Item_PK }, new { @class = "btn btn-primary float-right" })
                                </div>
                                <div class="card-body text-dark">
                                    <div class="card-text text-dark mb-2">
                                        Summary: <br>
                                        @Item.ShortDescription
                                    </div>
                                    @if (Item.ChildItems.Count > 0)
                                    {
                                        <button class="btn btn-outline-secondary mb-2"
                                                data-toggle="collapse"
                                                href="#Item-@Item.Item_PK"
                                                aria-expanded="true"
                                                aria-controls="Item-@Item.Item_PK"
                                                role="button">
                                            Sub-Items <i class="fa" aria-hidden="true"></i>
                                        </button>
                                    }
                                    @if (AdventureHomeController.IsInRole(User.Identity, Model.Adventure_PK, PlayerRole.PlayerRoleKey.Gamemaster))
                                    {
                                        @Html.ActionLink("Create New Sub-Item", "ItemCreate",
                                          new { adventureId = Model.Adventure_PK, parentId = Item.Item_PK },
                                          new { @class = "btn btn-outline-primary mb-2" })
                                    }
                                    @ShowItemTree(Item)
                                </div>

                                @helper ShowItemTree(Item parent)
                                {
                                    <div class="collapse show" id="Item-@parent.Item_PK">
                                        @foreach (var child in parent.ChildItems)
                                        {
                                            <div class="card card-inner border-secondary">
                                                <div class="card-header">
                                                    <h4 class="float-left text-dark">@child.Name</h4>
                                                    @Html.ActionLink("See More", "ItemDetails", new { id = child.Item_PK }, new { @class = "btn btn-secondary float-right" })
                                                </div>
                                                <div class="card-body text-secondary">
                                                    <div class="card-text text-secondary mb-2">
                                                        Summary: <br />
                                                        @child.ShortDescription
                                                    </div>
                                                    @if (child.ChildItems.Count > 0)
                                                    {
                                                        <button class="btn btn-outline-secondary mb-2"
                                                                data-toggle="collapse"
                                                                href="#Item-@child.Item_PK"
                                                                aria-expanded="true"
                                                                aria-controls="Item-@child.Item_PK"
                                                                role="button">
                                                            Sub-Items <i class="fa" aria-hidden="true"></i>
                                                        </button>
                                                    }
                                                    @if (AdventureHomeController.IsInRole(User.Identity, Model.Adventure_PK, PlayerRole.PlayerRoleKey.Gamemaster))
                                                    {
                                                        @Html.ActionLink("Create New Sub-Item", "ItemCreate",
                                                                            new { adventureId = parent.Adventure_PK, parentId = child.Item_PK },
                                                                            new { @class = "btn btn-outline-primary mb-2" })
                                                    }
                                                    @ShowItemTree(child)
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>

                        first = false;
                    }
                }
            </div>
        </div>
    </div>

    @if (AdventureHomeController.IsInAnyRole(User.Identity, Model.Adventure_PK, ViewPermissionList))
    {
    <div class="tab-pane fade p-3" id="nav-comments" role="tabpanel" aria-labelledby="nav-contact-tab">
        <!--Comments-->
        <button type="button" class="btn btn-primary mb-2" data-toggle="collapse" data-target="#newCommentCollapse">New Comment</button>
        <div class="collapse" id="newCommentCollapse">
            <div class="card mb-2 border border-primary">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <p>
                                <strong>New Comment</strong>
                            </p>
                            <div class="clearfix"></div>
                            <hr />
                            <div class="p-2">
                                @using (Html.BeginForm("CreateComment", "AdventureHome"))
                                {
                                    <textarea rows="5"
                                              id="NewComment"
                                              name="newComment"></textarea>
                                    <script>CKEDITOR.replace('NewComment', { customConfig: '/Scripts/ckeditor_config.js' })</script>
                                    @Html.HiddenFor(model => model.Adventure_PK);

                                    <input type="submit" value="Post Comment" class="btn btn-primary ml-2 mt-2 float-right" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @{
            var parentComments = Model.AdventureNotes.Where(n => n.ParentAdventureNote == null && n.IsActive).AsEnumerable();

            foreach (var parent in parentComments)
            {
                <div class="card mb-2 border border-primary">
                    <div class="card-header">
                        <button class="btn btn-outline-primary mr-1"
                                data-toggle="collapse" 
                                data-target="#card-body-@parent.AdventureNote_PK">
                            <i class="fa fa-chevron-down" aria-hidden="true"></i>
                        </button>
                        <strong>@parent.ApplicationUser.UserName</strong>
                        <small class="float-right">@parent.LastModifiedDate</small>
                    </div>
                    <div class="card-body collapse show" id="card-body-@parent.AdventureNote_PK">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="accordion p-0" id="commentCard-@parent.AdventureNote_PK">
                                    <div id="text-@parent.AdventureNote_PK" class="collapse show" data-parent="#commentCard-@parent.AdventureNote_PK">
                                        @Html.Raw(parent.Text)
                                    </div>
                                    @if (AdventureHomeController.IsAdventureNoteOwner(User.Identity, parent.AdventureNote_PK))
                                    {
                                        <div id="text-@parent.AdventureNote_PK" class="collapse" data-parent="#commentCard-@parent.AdventureNote_PK">

                                            @using (Html.BeginForm("EditComment", "AdventureHome"))
                                            {
                                                @Html.TextArea("commentText", parent.Text, new { @id = "comment-text-" + parent.AdventureNote_PK })
                                                @Html.Hidden("AdventureNote_PK", parent.AdventureNote_PK)
                                                <input type="submit" value="Submit" class="btn btn-primary m-2" />
                                                <script>CKEDITOR.replace('comment-text-@parent.AdventureNote_PK', { customConfig: '/Scripts/ckeditor_config.js' })</script>
                                            }
                                        </div>
                                    }
                                </div>
                                <hr />
                                @if (AdventureHomeController.IsAdventureNoteOwner(User.Identity, parent.AdventureNote_PK))
                                {
                                    <button class="btn btn-outline-warning mb-2"
                                            data-toggle="collapse"
                                            data-target="#text-@parent.AdventureNote_PK">
                                        Edit
                                    </button>
                                }
                                @ShowChildTree(parent)
                            </div>
                        </div>


                        @helper ShowChildTree(AdventureNote parentNote)
                        {
                            <!--Reply Section-->
                            <button type="button" class="btn btn-outline-primary mb-2" data-toggle="collapse" data-target="#newReplyCollapse-@parentNote.AdventureNote_PK">Reply</button>
                            <div class="collapse" id="newReplyCollapse-@parentNote.AdventureNote_PK">
                                <div class="card card-inner mb-1 mt-1 border border-secondary">
                                    <div class="card-header">
                                        <strong>New Reply</strong>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="p-0">
                                                    @using (Html.BeginForm("CreateComment", "AdventureHome"))
                                                    {
                                                        <textarea rows="5"
                                                                  id="NewReply-@parentNote.AdventureNote_PK"
                                                                  name="newComment"></textarea>
                                                        <script>CKEDITOR.replace('NewReply-@parentNote.AdventureNote_PK', { customConfig: '/Scripts/ckeditor_config.js' })</script>
                                                        @Html.HiddenFor(model => model.Adventure_PK)
                                                        @Html.Hidden("parentComment", parentNote.AdventureNote_PK)

                                                        <input type="submit" value="Post Reply" class="btn btn-primary ml-2 mt-2 float-right" />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Delete Comment -->
                            if (AdventureHomeController.IsInRole(User.Identity, Model.Adventure_PK, PlayerRole.PlayerRoleKey.Gamemaster))
                            {
                                <div class="float-right">
                                    <button class="btn btn-danger mb-2"
                                            data-toggle="collapse"
                                            href="#deleteCollapse-@parentNote.AdventureNote_PK"
                                            aria-expanded="true"
                                            aria-controls="deleteCollapse-@parentNote.AdventureNote_PK"
                                            role="button">
                                        Delete
                                    </button>
                                    <div class="collapse mr-4 mb-2 float-left" id="deleteCollapse-@parentNote.AdventureNote_PK">
                                        @using (Html.BeginForm("DeleteComment", "AdventureHome"))
                                        {
                                            <input hidden name="AdventureNote_PK" value="@parentNote.AdventureNote_PK" />
                                            <input type="submit" value="Confirm Delete" class="btn btn-outline-danger" />
                                        }
                                    </div>
                                </div>
                            }

                            <!-- Child Comments -->
                            <div class="collapse show" id="reply-@parentNote.AdventureNote_PK">
                                @foreach (var child in parentNote.ChildNotes.Where(c => c.IsActive).AsEnumerable())
                                {
                                    <div class="card card-inner mb-1 mt-1 border border-secondary">
                                        <div class="card-header">
                                            <button class="btn btn-outline-secondary mr-1"
                                                    data-toggle="collapse"
                                                    data-target="#card-body-@child.AdventureNote_PK">
                                                <i class="fa fa-chevron-down" aria-hidden="true"></i>
                                            </button>
                                            <strong>@child.ApplicationUser.UserName</strong>
                                            <small class="float-right">@child.LastModifiedDate</small>
                                        </div>
                                        <div class="card-body collapse show" id="card-body-@child.AdventureNote_PK">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="accordion p-0" id="commentCard-@child.AdventureNote_PK">
                                                        <div id="text-@child.AdventureNote_PK" class="collapse show" data-parent="#commentCard-@child.AdventureNote_PK">
                                                            @Html.Raw(child.Text)
                                                        </div>
                                                        @if (AdventureHomeController.IsAdventureNoteOwner(User.Identity, child.AdventureNote_PK))
                                                        {
                                                            <div id="text-@child.AdventureNote_PK" class="collapse" data-parent="#commentCard-@child.AdventureNote_PK">

                                                                @using (Html.BeginForm("EditComment", "AdventureHome"))
                                                                {
                                                                    @Html.TextArea("commentText", child.Text, new { @id = "comment-text-" + child.AdventureNote_PK })
                                                                    @Html.Hidden("AdventureNote_PK", child.AdventureNote_PK)
                                                                    <input type="submit" value="Submit" class="btn btn-primary m-2" />
                                                                    <script>CKEDITOR.replace('comment-text-@child.AdventureNote_PK', { customConfig: '/Scripts/ckeditor_config.js' })</script>
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                    <hr />
                                                    @if (AdventureHomeController.IsAdventureNoteOwner(User.Identity, child.AdventureNote_PK))
                                                    {
                                                        <button class="btn btn-outline-warning mb-2"
                                                                data-toggle="collapse"
                                                                data-target="#text-@child.AdventureNote_PK">
                                                            Edit
                                                        </button>
                                                    }
                                                    @ShowChildTree(child)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>
    }
</div>
<hr />
<p>
    @Html.RouteLink("Back to Adventure List", "adventurehome", null, new { @class = "btn btn-secondary" })
</p>